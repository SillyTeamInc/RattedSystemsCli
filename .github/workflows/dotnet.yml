name: .NET CI/CD

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

  publish-linux:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Publish Linux
        run: dotnet publish -c Release -r linux-x64 --self-contained true -o publish/linux -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true
      - name: Rename Linux PDBs
        run: |
          for f in publish/linux/*.pdb; do
            mv "$f" "${f%.pdb}.linux.pdb"
          done
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: publish/linux/
          retention-days: 1 

  publish-windows:
    needs: build-test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Publish Windows
        run: dotnet publish -c Release -r win-x64 --self-contained true -o publish/windows -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true
      - name: Rename Windows PDBs
        shell: pwsh
        run: |
          Get-ChildItem publish/windows/*.pdb | ForEach-Object {
              Rename-Item $_ ($_.BaseName + ".windows.pdb")
          }
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: publish/windows/
          retention-days: 1

  release:
    needs: [publish-linux, publish-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: release/linux
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: release/windows
      - name: Remove License Files
        run: |
           find release/ -type f -name "*.md" -delete
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            release/linux/**
            release/windows/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
